Fehler:
- Wenn Seite neu geladen wird ctrl+r und dann direkt ein Projekt geladen wird, wird nur die Seite 1 angezeigt und ich kann nicht hin und her wechseln.
- Polygon wird beendet, indem man in die Nähe des Startpunkts klickt. Evtl Hinweis geben.

train model
- Zu grosse Images können nicht trainiert werden, reduzieren, wenn möglich.
- Im train_model windowdataset, use_preprocessing auf True stellen, um mit vorverarbeiteten Bilder zu trainieren (ist unklar, ob es besser wird, aus meiner Sicht)


Webapp:
- Fenster Überlappungen entfernen funktioniert noch nicht vollständig. Ist implementiert, funktioniert aber immer noch nicht. 
- In der Tabelle Höhe und Breite von Fenster und Türen ausgeben.
- Bei zu grossen Plänen erkennt es kaum Fenster in der App (hinweis geben, dass kleine Pläne besser funktionieren)
- Evtl am preprocessing mit openCV rumschrauben, um Ergebnisse zu verbessern.
- Evtl. Eingaben in Spalte links (darunter die Tabelle der Ergebniise) machen und Pläne in Spalte rechts (bessere Ansicht auf den Plan).
- Link erstellen lassen für Ansichtsversion, um mit Kollegen oder für Präsi zu teilen.
- Grosses Drag- n Drop in der Mitte des Fenster einbauen
- Oben im Banner eine Action-Button mit Dropdown-Menu einbauen. Darin enthalten, Projekt speichern, Projekt öffnen (Projektlsite wird wieder gross in Mitte dargestellt), hotkeys usw. Ähnlich wie makesense.ai

Hinweise Datenumgang
- Option 1:Aller Erkennungsergebnisse werden im Frontend (JS-mässig) gespeichert. Wenn eine Seite das erste Mal aufgerufen wird, wird sie von fastRccnn analysiert und danach die Ergebnisse um Browser gespeichert (Lazy-Leading). Beim erneuten Besuch der Seite werden die gespeicherten Daten verwendet. Dies erlaubt die Änderungen zu behalten und jede einzelne Seite zu analysieren. 
- Option 2: Beim ersten Öffnen des gesamten PDF-Dateien wird die Analyse durchgeführt und ins Frontend gespeichert (bräuchte am Anfang lang, dafür nachher sehr schnell). Ist vielleicht sinnvoll, wenn oft mit sehr grossen PDF(viele Seiten) gearbeitet wird.
- Option 3: Bearbeitungen im backend zu speichern, verknüpft mit der PDF-Session-ID (gemäss Claude die robusteste Lösung) -> Vermutlich weil Daten im backend gespeichert (Server) bleiben, auch wenn der Browser absützt oder die Sitzung verloren geht. Weitere Vorteile sind geräteübergreifender Zugriff durch die Session-ID. Änderungen bleiben sehr lange erhalten. Zentrale Versionierung (Es können einfacher rühere Bearbeitungszustände wiederhergestellt werden, wichtig bei Versionsänderungen.

- Neu anstatt Lazy-Loading, wird die 1. Seite beim hochladen analysiert und angezeigt. Im Hintergrund werden die restlichen Seiten analyisert, inkl. Status-Nachricht unten links.

Claude schlägt mir folgende Dateistruktur auf dem server vor:

projects/
  └── [project_id]/
      ├── original.pdf                 # Original PDF-Datei
      ├── metadata.json                # Projekt-Metadaten (Name, Datum, Nutzer)
      ├── pages/
      │   ├── page_1.jpg               # Extrahierte Bildseiten
      │   ├── page_2.jpg
      │   └── ...
      └── analysis/
          ├── analysis_settings.json   # Globale Einstellungen
          ├── page_1_results.json      # Analyseergebnisse pro Seite
          ├── page_2_results.json
          └── ...


Projektname: bison (buildingvision), sparrow (weil er immer gegen scheiben fliegt), onlyPlans


# analysis_settings.py
- Dieses File speichert für jede Seite die Breite, Höhe, DPI, Massstab und der Erkennungsschwellenwert.
- Stand 27. April 2025 wird mit dem "Plan analysieren" alle Eigenschaften korrekt gespeichert. Auch wenn ich auf eine andere Seite navigiere und "Aktuelle Seite analysiere" betätige mit anderen Paramter, werden diese korrekt ins JSON eingetragen. 
- Es funktioniert:
    - PDF-Dokument mit unterschiedlichen Formaten hochladen.
    - benutzerdefiniertes Format eingeben und auf einzelner Seite analysieren
    - vordefiniteres Format (A4 und A3) für eine Seite berechnen und abspeichern
    - Veränderungen DPI wird gepseichert
    - Veränderngen beim Massstab werden gepeichert.
    - Veränderungen Treshold werden gespeichert.
- Das Formatauswahlform in der webapp ist nur für den Export der Annotationen auf das Original-PDF. Ansonsten hat es keine Funktion.

